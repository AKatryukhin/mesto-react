{"version":3,"sources":["images/header-logo.svg","components/Header.js","components/Footer.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/PopupWithForm.js","components/ImagePopup.js","utils/api.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","utils/constants.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","Footer","Date","getFullYear","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","type","aria-label","onClick","link","name","length","Main","onEditAvatar","onAddPlace","onEditProfile","cards","avatar","about","map","PopupWithForm","title","isOpen","onClose","buttonTitle","children","onSubmit","noValidate","ImagePopup","api","address","token","this","_address","_token","res","ok","json","Promise","reject","status","fetch","headers","authorization","then","_handleResponse","method","body","JSON","stringify","id","EditProfilePopup","onUpdateUser","useEffect","setName","setDescription","useState","description","e","preventDefault","required","minLength","maxLength","placeholder","value","onChange","evt","target","EditAvatarPopup","onUpdateAvatar","inputRef","useRef","current","ref","AddPlacePopup","setLink","document","querySelector","forms","place_form","avatar_form","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","setCurrentUser","setCards","getInitialCards","cardsData","catch","err","console","log","getProfileInfo","currentUserData","selectedCard","setSelectedCard","closeAllPopups","handleEscClose","key","handleOverlayClose","classList","contains","window","addEventListener","removeEventListener","Provider","changeLikeCardStatus","newCardSomeLike","state","c","removeCard","filter","setProfileInfo","onSuccess","addCard","newCard","setUserAvatar","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.087fac37.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/header-logo.6129e9de.svg\";","import logo from '../images/header-logo.svg';\r\n\r\nfunction Header() {\r\n  return (\r\n      <header className='header page__header'>\r\n        <img className='header__logo' src={logo} alt='Логотип Место' />\r\n      </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","function Footer() {\r\n  return (\r\n      <footer className='footer page__footer container'>\r\n        <p className='footer__copyright'>&copy; {new Date().getFullYear()} Mesto Russia </p>\r\n      </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\n\r\nexport const CurrentUserContext = React.createContext();","import React from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Card({ card, onCardClick, onCardLike, onCardDelete }) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  // Определяем, являемся ли мы владельцем текущей карточки\r\n  const isOwn = card.owner._id === currentUser._id;\r\n\r\n  // Создаём переменную, которую после зададим в `className` для кнопки удаления\r\n  const cardDeleteButtonClassName = `photo__trash ${\r\n    isOwn ? 'photo__trash_type_visible' : ''\r\n  }`;\r\n\r\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n  const isLiked = card.likes.some((i) => i._id === currentUser._id);\r\n\r\n  // Создаём переменную, которую после зададим в `className` для кнопки лайка\r\n  const cardLikeButtonClassName = `photo__like ${\r\n    isLiked ? 'photo__like_type_active' : ''\r\n  }`;\r\n\r\n  function handleClick() {\r\n    onCardClick(card);\r\n  }\r\n\r\n  function handleLikeClick() {\r\n    onCardLike(card);\r\n  }\r\n\r\n  function handleDeleteClick() {\r\n    onCardDelete(card);\r\n  }\r\n\r\n  return (\r\n    <article className='photo'>\r\n      <figure className='photo__element'>\r\n        <button\r\n          className={cardDeleteButtonClassName}\r\n          type='button'\r\n          aria-label='Кнопка для Удаления'\r\n          onClick={handleDeleteClick}\r\n        ></button>\r\n        <img\r\n          src={card.link}\r\n          alt={card.name}\r\n          className='photo__image'\r\n          onClick={handleClick}\r\n        />\r\n        <figcaption className='photo__title'>\r\n          <h2 className='photo__name'>{card.name}</h2>\r\n          <div className='photo__like-container'>\r\n            <button\r\n              className={cardLikeButtonClassName}\r\n              type='button'\r\n              aria-label='Кнопка для Лайков'\r\n              onClick={handleLikeClick}\r\n            ></button>\r\n            <p className='photo__like-total'>{card.likes.length}</p>\r\n          </div>\r\n        </figcaption>\r\n      </figure>\r\n    </article>\r\n  );\r\n}\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card.js';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Main({\r\n  onEditAvatar,\r\n  onAddPlace,\r\n  onEditProfile,\r\n  onCardClick,\r\n  cards,\r\n  onCardLike,\r\n  onCardDelete,\r\n}) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <main className='content container'>\r\n      <section className='profile content__profile container'>\r\n        <div className='profile__avatar' onClick={onEditAvatar}>\r\n          <img\r\n            className='profile__image'\r\n            src={currentUser.avatar}\r\n            alt='Картинка Аватар'\r\n          />\r\n        </div>\r\n        <div className='profile__info'>\r\n          <div className='profile__editcase'>\r\n            <h1 className='profile__name'>{currentUser.name}</h1>\r\n            <button\r\n              type='button'\r\n              className='profile__edit'\r\n              aria-label='Кнопка открытия окна редактирования профиля'\r\n              onClick={onEditProfile}\r\n            ></button>\r\n          </div>\r\n          <p className='profile__job'>{currentUser.about}</p>\r\n        </div>\r\n        <button\r\n          className='profile__add'\r\n          type='button'\r\n          aria-label='Кнопка добавления фото'\r\n          onClick={onAddPlace}\r\n        ></button>\r\n      </section>\r\n      <section className='galery content__galery' aria-label='Фото мест'>\r\n        {cards.map((card) => {\r\n          return (\r\n            <Card\r\n              key={card._id}\r\n              onCardClick={onCardClick}\r\n              card={card}\r\n              onCardLike={onCardLike}\r\n              onCardDelete={onCardDelete}\r\n            />\r\n          );\r\n        })}\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","function PopupWithForm({\r\n  name,\r\n  title,\r\n  isOpen,\r\n  onClose,\r\n  buttonTitle,\r\n  children,\r\n  onSubmit,\r\n}) {\r\n  return (\r\n    <section\r\n      className={`popup popup_type_${name} ${isOpen ? 'popup_opened' : ''}`}\r\n    >\r\n      <div className='popup__container'>\r\n        <button\r\n          type='button'\r\n          className='popup__close'\r\n          aria-label='Кнопка для закрытия'\r\n          onClick={onClose}\r\n        ></button>\r\n        <h2 className='popup__title'>{title}</h2>\r\n        <form\r\n          onSubmit={onSubmit}\r\n          className='popup__form'\r\n          name={`${name}_form`}\r\n          noValidate\r\n        >\r\n          {children}\r\n          <button\r\n            className='popup__save'\r\n            type='submit'\r\n            aria-label='Кнопка Сохранить'\r\n          >\r\n            {buttonTitle}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\nexport default PopupWithForm;\r\n","function ImagePopup({ card, onClose }) {\r\n  return (\r\n    <section className={`popup popup_type_image ${card && 'popup_opened'}`}>\r\n      <div className='popup__container-image'>\r\n        <button\r\n          type='button'\r\n          className='popup__close popup__close_type_image'\r\n          aria-label='Кнопка для закрытия окна'\r\n          onClick={onClose}\r\n        ></button>\r\n        <figure className='popup__element-image'>\r\n          <img\r\n            src={card ? card.link : ''}\r\n            alt={card ? card.name : ''}\r\n            className='popup__image'\r\n          />\r\n          <figcaption className='popup__title-image'>\r\n            <h2 className='popup__name-image'>{card ? card.name : ''}</h2>\r\n          </figcaption>\r\n        </figure>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\nexport default ImagePopup;\r\n","class Api {\r\n  constructor({ address, token }) {\r\n    this._address = address;\r\n    this._token = token;\r\n  }\r\n\r\n  _handleResponse(res) {\r\n    if (!res.ok) {\r\n      return Promise.reject(`Error: ${res.status}`);\r\n    }\r\n    return res.json();\r\n  }\r\n\r\n  getProfileInfo() {\r\n    return fetch(`${this._address}/users/me`, {\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-type': 'application/json',\r\n      },\r\n    }).then(this._handleResponse);\r\n  }\r\n\r\n  getInitialCards() {\r\n    return fetch(`${this._address}/cards`, {\r\n      headers: {\r\n        authorization: this._token,\r\n      },\r\n    }).then(this._handleResponse);\r\n  }\r\n\r\n  setProfileInfo({ name, about }) {\r\n    return fetch(`${this._address}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        name: name,\r\n        about: about,\r\n      }),\r\n    }).then(this._handleResponse);\r\n  }\r\n\r\n  setUserAvatar({ avatar }) {\r\n    return fetch(`${this._address}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        avatar: avatar,\r\n      }),\r\n    }).then(this._handleResponse);\r\n  }\r\n\r\n  addCard({ name, link }) {\r\n    return fetch(`${this._address}/cards`, {\r\n      method: 'POST',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        name: name,\r\n        link: link,\r\n      }),\r\n    }).then(this._handleResponse);\r\n  }\r\n\r\n  removeCard(id) {\r\n    return fetch(`${this._address}/cards/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        authorization: this._token,\r\n      },\r\n    }).then(this._handleResponse);\r\n  }\r\n\r\n  changeLikeCardStatus(id, isLiked) {\r\n  return fetch(`${this._address}/cards/likes/${id}`, {\r\n    method: isLiked  ? 'DELETE' : 'PUT',\r\n    headers: {\r\n      authorization: this._token,\r\n    },\r\n  }).then(this._handleResponse);\r\n}\r\n}\r\n\r\nconst api = new Api({\r\n  address: 'https://mesto.nomoreparties.co/v1/cohort-22',\r\n  token: '239868fa-70b9-49a6-a5c6-22cb2b6196e6',\r\n});\r\n\r\nexport default api;\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm.js';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser }) {\r\n  // Подписка на контекст\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  // После загрузки текущего пользователя из API\r\n  // его данные будут использованы в управляемых компонентах.\r\n  React.useEffect((currentUser) => {\r\n    if (currentUser) {\r\n      setName(currentUser.name);\r\n      setDescription(currentUser.about);\r\n  }}, [currentUser]);\r\n\r\n  const [name, setName] = React.useState('');\r\n  const [description, setDescription] = React.useState('');\r\n\r\n  function handleChangeName(evt) {\r\n    setName(evt.target.value);\r\n  }\r\n\r\n  function handleChangeDescription(evt) {\r\n    setDescription(evt.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    // Передаём значения управляемых компонентов во внешний обработчик\r\n    onUpdateUser({\r\n      name,\r\n      about: description,\r\n    });\r\n  }\r\n  return (\r\n    <PopupWithForm\r\n      onSubmit={handleSubmit}\r\n      name='prof_form'\r\n      title='Редактировать профиль'\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      buttonTitle='Сохранить'\r\n    >\r\n      <fieldset className='popup__fild'>\r\n        <input\r\n          type='text'\r\n          className='popup__input popup__input_type_name'\r\n          id='name-input'\r\n          name='name'\r\n          required\r\n          minLength='2'\r\n          maxLength='40'\r\n          placeholder='имя'\r\n          value={name}\r\n          onChange={handleChangeName}\r\n        />\r\n        <span className='popup__input-error name-input-error'></span>\r\n        <input\r\n          type='text'\r\n          className='popup__input popup__input_type_descr'\r\n          id='about-input'\r\n          name='about'\r\n          required\r\n          minLength='2'\r\n          maxLength='200'\r\n          placeholder='описание'\r\n          value={description}\r\n          onChange={handleChangeDescription}\r\n        />\r\n        <span className='popup__input-error about-input-error'></span>\r\n      </fieldset>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default EditProfilePopup;\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm.js';\r\n\r\nfunction EditAvatarPopup({\r\n  isOpen,\r\n  onClose,\r\n  onUpdateAvatar,\r\n}) {\r\n  const inputRef = React.useRef();\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    onUpdateAvatar(\r\n      {\r\n        avatar: inputRef.current.value,\r\n      },\r\n      () => {\r\n        inputRef.current.value = '';\r\n      }\r\n    );\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      onSubmit={handleSubmit}\r\n      name='avatar_form'\r\n      title='Обновить аватар'\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      buttonTitle='Сохранить'\r\n    >\r\n      <fieldset className='popup__fild'>\r\n        <input\r\n          ref={inputRef}\r\n          type='url'\r\n          className='popup__input popup__input_type_descr popup__input-avatar'\r\n          id='avatar-link-input'\r\n          name='link'\r\n          placeholder='Ссылка на аватар'\r\n          required\r\n        />\r\n        <span className='popup__input-error avatar-link-input-error'></span>\r\n      </fieldset>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default EditAvatarPopup;\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm.js';\r\n\r\nfunction AddPlacePopup({ isOpen, onClose, onAddPlace }) {\r\n \r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    onAddPlace({ name, link },\r\n      () => {\r\n        setName('');\r\n        setLink('');\r\n      });\r\n  }\r\n\r\n  const [name, setName] = React.useState('');\r\n  const [link, setLink] = React.useState('');\r\n\r\n  function handleChangeName(evt) {\r\n    setName(evt.target.value);\r\n  }\r\n\r\n  function handleChangeLink(evt) {\r\n    setLink(evt.target.value);\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      onSubmit={handleSubmit}\r\n      name='place_form'\r\n      title='Новое место'\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      buttonTitle='Создать'\r\n    >\r\n      <fieldset className='popup__fild'>\r\n        <input\r\n          type='text'\r\n          className='popup__input popup__input_type_name'\r\n          id='place-input'\r\n          name='name'\r\n          placeholder='Название'\r\n          required\r\n          minLength='2'\r\n          maxLength='30'\r\n          onChange={handleChangeName}\r\n          value={name}\r\n        />\r\n        <span className='popup__input-error place-input-error'></span>\r\n        <input\r\n          type='url'\r\n          className='popup__input popup__input_type_descr'\r\n          id='link-input'\r\n          name='link'\r\n          placeholder='Ссылка на картинку'\r\n          required\r\n          onChange={handleChangeLink}\r\n          value={link}\r\n        />\r\n        <span className='popup__input-error link-input-error'></span>\r\n      </fieldset>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default AddPlacePopup;\r\n","//кнопка открытия попапа - редактирования профиля\r\nexport const popupProfOpenButton = document.querySelector('.profile__edit');\r\n//кнопка открытия попапа - добавления новой карточки\r\nexport const popupPlaceOpenButton = document.querySelector('.profile__add');\r\n// селектор секции вставки/отображения карточек\r\nexport const cardListSelector = '.galery';\r\n// // форма попапа редактирования профиля\r\n// export const formElementPfof = document.forms.prof_form;\r\n// // поле ввода \"имени\" в форме попап Prof\r\n// export const nameInput = formElementPfof.elements.name;\r\n// //поле ввода \"о себе\" в форме попап Prof\r\n// export const jobInput = formElementPfof.elements.about;\r\n// форма попапа добавления карточки\r\nexport const formElementPlace = document.forms.place_form;\r\n// форма попапа добавления аватара\r\nexport const formElementAvatar = document.forms.avatar_form;\r\n\r\nexport const popupAvatarOpenButton = document.querySelector('.profile__avatar');\r\n\r\nexport const ESC_KEYCODE = 'Escape';\r\n\r\nexport const dataForm = {\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__save',\r\n  inactiveButtonClass: 'popup__save_inactive',\r\n  inputErrorClass: 'popup__input_type_error',\r\n  errorClass: 'popup__input-error_active',\r\n};\r\n","import React from 'react';\r\nimport Header from './Header.js';\r\nimport Footer from './Footer.js';\r\nimport Main from './Main.js';\r\nimport PopupWithForm from './PopupWithForm.js';\r\nimport ImagePopup from './ImagePopup.js';\r\nimport api from '../utils/api.js';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport EditProfilePopup from './EditProfilePopup.js';\r\nimport EditAvatarPopup from './EditAvatarPopup.js';\r\nimport AddPlacePopup from './AddPlacePopup.js';\r\nimport { ESC_KEYCODE } from '../utils/constants';\r\n\r\nfunction App() {\r\n  // переменные состояния, отвечающие за видимость попапов\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] =\r\n    React.useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] =\r\n    React.useState(false);\r\n  // переменная состояния, отвечающая за данные пользователя\r\n  const [currentUser, setCurrentUser] = React.useState({});\r\n\r\n  const [cards, setCards] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    api\r\n      .getInitialCards()\r\n      .then((cardsData) => {\r\n        setCards(cardsData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  function handleCardLike(card) {\r\n    // Снова проверяем, есть ли уже лайк на этой карточке\r\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\r\n    // Отправляем запросы в API и получаем обновлённые данные карточки\r\n    api\r\n      .changeLikeCardStatus(card._id, isLiked)\r\n      .then((newCardSomeLike) => {\r\n        setCards((state) =>\r\n          state.map((c) => (c._id === card._id ? newCardSomeLike : c))\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  function handleCardDelete(card) {\r\n    // Отправляю запрос в API и получаю массив, исключив из него удалённую карточку\r\n    api\r\n      .removeCard(card._id)\r\n      .then(() => {\r\n        setCards((state) => state.filter((c) => c._id !== card._id));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    api\r\n      .getProfileInfo()\r\n      .then((currentUserData) => {\r\n        setCurrentUser(currentUserData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  // переменная состояния, значением которой задается ссылка на карточку\r\n  const [selectedCard, setSelectedCard] = React.useState(null);\r\n\r\n\r\nReact.useEffect(() => {\r\n\r\n  //функция закрытия попапов по Escape\r\n  function handleEscClose(evt) {\r\n  evt.key === ESC_KEYCODE && closeAllPopups();\r\n  }\r\n  \r\n  //функция закрытия попапов по оверлей\r\n  function handleOverlayClose (evt) {\r\n    evt.target.classList.contains('popup_opened') && closeAllPopups();\r\n    }\r\n\r\n  window.addEventListener('keydown', handleEscClose);\r\n  window.addEventListener('click', handleOverlayClose);\r\n\r\n  return () => {\r\n    window.removeEventListener('click', handleOverlayClose);\r\n    window.removeEventListener('keydown', handleEscClose);\r\n\r\n  };\r\n}, []);\r\n\r\n  //  обработчики для стейтовых переменных\r\n  function handleCardClick(card) {\r\n    setSelectedCard(card);\r\n  }\r\n  function handleEditAvatarClick() {\r\n    setIsEditAvatarPopupOpen(true);\r\n  }\r\n  function handleEditProfileClick() {\r\n    setIsEditProfilePopupOpen(true);\r\n  }\r\n  function handleAddPlaceClick() {\r\n    setIsAddPlacePopupOpen(true);\r\n  }\r\n\r\n  // функция закрытия попапов\r\n  function closeAllPopups() {\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setIsEditAvatarPopupOpen(false);\r\n    setSelectedCard(null);\r\n  }\r\n\r\n  function handleUpdateUser({ name, about }) {\r\n    api\r\n      .setProfileInfo({ name, about })\r\n      .then((currentUserData) => {\r\n        setCurrentUser(currentUserData);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  function handleUpdateAvatar({ avatar }, onSuccess) {\r\n    api\r\n      .setUserAvatar({ avatar })\r\n      .then((currentUserData) => {\r\n        setCurrentUser(currentUserData);\r\n        onSuccess();\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  function handleAddPlaceSubmit({ name, link }, onSuccess) {\r\n    api\r\n      .addCard({ name, link })\r\n      .then((newCard) => {\r\n        setCards([newCard, ...cards]);\r\n        onSuccess();\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <div className='background'>\r\n        <div className='page'>\r\n          <Header />\r\n          <Main\r\n            cards={cards}\r\n            onEditAvatar={handleEditAvatarClick}\r\n            onEditProfile={handleEditProfileClick}\r\n            onAddPlace={handleAddPlaceClick}\r\n            onCardClick={handleCardClick}\r\n            onCardLike={handleCardLike}\r\n            onCardDelete={handleCardDelete}\r\n          />\r\n          <Footer />\r\n          <EditProfilePopup\r\n            isOpen={isEditProfilePopupOpen}\r\n            onClose={closeAllPopups}\r\n            onUpdateUser={handleUpdateUser}\r\n          />\r\n          <AddPlacePopup\r\n            isOpen={isAddPlacePopupOpen}\r\n            onClose={closeAllPopups}\r\n            onAddPlace={handleAddPlaceSubmit}\r\n          />\r\n          <EditAvatarPopup\r\n            isOpen={isEditAvatarPopupOpen}\r\n            onClose={closeAllPopups}\r\n            onUpdateAvatar={handleUpdateAvatar}\r\n          />\r\n          <PopupWithForm\r\n            name='confirm_form'\r\n            title='Вы уверены?'\r\n            onClose={closeAllPopups}\r\n            buttonTitle='Да'\r\n          ></PopupWithForm>\r\n          <ImagePopup onClose={closeAllPopups} card={selectedCard} />\r\n        </div>\r\n      </div>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}